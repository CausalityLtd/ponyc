#
# Pull Request Tasks
#

task:
  only_if: $CIRRUS_PR != ''

  timeout_in: 120m

  arm_container:
    image: ponylang/ponyc-ci-aarch64-unknown-linux-ubuntu22.04-builder:20220720
    cpu: 8
    memory: 16

  environment:
    IMAGE: ponylang/ponyc-ci-aarch64-unknown-linux-ubuntu22.04-builder:20220720

  name: "aarch64 Linux glibc"

  libs_cache:
    folder: build/libs
    fingerprint_script: echo "`md5sum Makefile` `md5sum CMakeLists.txt` `md5sum lib/CMakeLists.txt` ${IMAGE}"
    populate_script: make libs build_flags=-j8
  upload_caches:
    - libs

  debug_configure_script:
    - make configure arch=armv8-a config=debug
  debug_build_script:
    - make build config=debug
  debug_test_script:
    - make test-ci config=debug
  release_configure_script:
    - make configure arch=armv8-a config=release
  release_build_script:
    - make build config=release
  release_test_script:
    - make test-ci config=release

task:
  only_if: $CIRRUS_PR != ''

  timeout_in: 120m

  freebsd_instance:
    image: freebsd-13-1-release-amd64
    cpu: 8
    memory: 24

  name: "x86-64 FreeBSD"

  os_configuration_script:
    - sysctl net.inet.tcp.keepinit=1000

  install_script:
    - echo "FETCH_RETRY = 6" >> /usr/local/etc/pkg.conf
    - pkg install -y bash cmake gmake libunwind git

  libs_cache:
    folder: build/libs
    fingerprint_script: echo "`md5 Makefile` `md5 CMakeLists.txt` `md5 lib/CMakeLists.txt` freebsd-13.1 20210710"
    populate_script: gmake libs build_flags=-j8
  upload_caches:
    - libs

  debug_configure_script:
    - gmake configure arch=x86-64 config=debug
  debug_build_script:
    - gmake build config=debug
  debug_test_script:
    - gmake test-ci config=debug usedebugger=lldb
  release_configure_script:
    - gmake configure arch=x86-64 config=release
  release_build_script:
    - gmake build config=release
  release_test_script:
    - gmake test-ci config=release usedebugger=lldb

task:
  only_if: $CIRRUS_PR != ''

  timeout_in: 120m

  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-xcode:14.3

  name: "arm64 Apple Darwin"

  libs_cache:
    folder: build/libs
    fingerprint_script: echo "`md5 Makefile` `md5 CMakeLists.txt` `md5 lib/CMakeLists.txt` arm64 ghcr.io/cirruslabs/macos-ventura-xcode:14.3 20220511"
    populate_script: make libs build_flags=-j12
  upload_caches:
    - libs

  install_script:
    - brew update --force --quiet
    - brew install llvm
  debug_configure_script:
    - make configure arch=armv8 config=debug
  debug_build_script:
    - make build arch=armv8 config=debug
  debug_test_script:
    - make test-ci config=debug usedebugger=/opt/homebrew/opt/llvm/bin/lldb
  release_configure_script:
    - make configure arch=armv8 config=release
  release_build_script:
    - make build arch=armv8 config=release
  release_test_script:
    - make test-ci config=release usedebugger=/opt/homebrew/opt/llvm/bin/lldb

task:
  only_if: $CIRRUS_PR != ''

  timeout_in: 120m

  windows_container:
    image: ponylang/ponyc-ci-x86-64-pc-windows-msvc-builder:20220803
    os_version: 2019
    cpu: 8
    memory: 24

  name: "x86-64 Windows MSVC"

  libs_cache:
    folder: build/libs
    fingerprint_script:
      - ps: (Get-FileHash -Path make.ps1).Hash + (Get-FileHash -Path CMakeLists.txt).Hash + (Get-FileHash -Path lib\CMakeLists.txt).Hash + "Windows 20220803"
    populate_script:
      - ps: .\make.ps1 -Command libs -Generator "Visual Studio 17 2022"
  upload_caches:
    - libs

  debug_config_script:
    - ps: .\make.ps1 -Command configure -Config Debug -Generator "Visual Studio 17 2022"
  debug_build_script:
    - ps: .\make.ps1 -Command build -Config Debug
  debug_test_script:
    - ps: .\make.ps1 -Command test -Config Debug -Uselldb yes
  release_config_script:
    - ps: .\make.ps1 -Command configure -Config Release
  release_build_script:
    - ps: .\make.ps1 -Command build -Config Release
  release_test_script:
    - ps: .\make.ps1 -Command test -Config Release -Uselldb yes

task:
  only_if: $CIRRUS_PR != ''

  container:
    image: ponylang/ponyc-ci-cross-arm:20230115
    cpu: 8
    memory: 6

  environment:
    IMAGE: ponylang/ponyc-ci-cross-arm:20230115

  name: "arm Linux glibc"

  libs_cache:
    folder: build/libs
    fingerprint_script: echo "`md5sum Makefile` `md5sum CMakeLists.txt` `md5sum lib/CMakeLists.txt` ${IMAGE}"
    populate_script: make libs build_flags=-j8
  upload_caches:
    - libs

  configure_script:
    - make configure
  build_script:
    - make build
  test_script:
    - make test-ci usedebugger=lldb
  libponyrt_cross_script:
    - make cross-libponyrt CC=arm-linux-gnueabi-gcc CXX=arm-linux-gnueabi-g++ arch=armv7-a cross_cflags="-march=armv7-a -mtune=cortex-a9" cross_lflags="-O3;-march=arm"
  test_stdlib_cross_script:
    - make test-cross-ci PONYPATH=../armv7-a/release cross_triple=arm-unknown-linux-gnueabi cross_arch=armv7-a cross_cpu=cortex-a9 cross_linker=arm-linux-gnueabi-gcc cross_runner="qemu-arm-static -cpu cortex-a9 -L /usr/local/arm-linux-gnueabi/libc"

task:
  only_if: $CIRRUS_PR != ''

  container:
    image: ponylang/ponyc-ci-cross-armhf:20230115
    cpu: 8
    memory: 6

  environment:
    IMAGE: ponylang/ponyc-ci-cross-armhf:20230115

  name: "armhf Linux glibc"

  libs_cache:
    folder: build/libs
    fingerprint_script: echo "`md5sum Makefile` `md5sum CMakeLists.txt` `md5sum lib/CMakeLists.txt` ${IMAGE}"
    populate_script: make libs build_flags=-j8
  upload_caches:
    - libs

  configure_script:
    - make configure
  build_script:
    - make build
  test_script:
    - make test-ci usedebugger=lldb
  libponyrt_cross_script:
    - make cross-libponyrt CC=arm-linux-gnueabihf-gcc CXX=arm-linux-gnueabihf-g++ arch=armv7-a cross_cflags="-march=armv7-a -mtune=cortex-a9" cross_lflags="-O3;-march=arm"
  test_stdlib_cross_script:
    - make test-cross-ci PONYPATH=../armv7-a/release cross_triple=arm-unknown-linux-gnueabihf cross_arch=armv7-a cross_cpu=cortex-a9 cross_linker=arm-linux-gnueabihf-gcc cross_runner="qemu-arm-static -cpu cortex-a9 -L /usr/local/arm-linux-gnueabihf/libc"

#
# Nightly build tasks
#

task:
  only_if: $CIRRUS_CRON == "nightly"

  timeout_in: 120m

  freebsd_instance:
    image: freebsd-13-1-release-amd64
    cpu: 8
    memory: 24

  name: "nightly: x86-64-unknown-freebsd-13.1"

  environment:
    CLOUDSMITH_API_KEY: ENCRYPTED[!2cb1e71c189cabf043ac3a9030b3c7708f9c4c983c86d07372ae58ad246a07c54e40810d038d31c3cf3ed8888350caca!]

  install_script:
    - echo "FETCH_RETRY = 6" >> /usr/local/etc/pkg.conf
    - python3 -m ensurepip --upgrade
    - python3 -m pip install cloudsmith-cli
    - pkg install -y bash cmake gmake libunwind git

  libs_cache:
    folder: build/libs
    fingerprint_script: echo "`md5 Makefile` `md5 CMakeLists.txt` `md5 lib/CMakeLists.txt` freebsd-13.1 20210710"
    populate_script: gmake libs build_flags=-j8
  upload_caches:
    - libs

  nightly_script:
    - bash .ci-scripts/x86-64-unknown-freebsd-13.1-nightly.bash

task:
  only_if: $CIRRUS_CRON == "nightly"

  timeout_in: 120m

  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-xcode:14.3

  name: "nightly: arm64-apple-darwin"

  environment:
    TRIPLE_VENDOR: apple
    TRIPLE_OS: darwin
    CLOUDSMITH_API_KEY: ENCRYPTED[!2cb1e71c189cabf043ac3a9030b3c7708f9c4c983c86d07372ae58ad246a07c54e40810d038d31c3cf3ed8888350caca!]

  libs_cache:
    folder: build/libs
    fingerprint_script: echo "`md5 Makefile` `md5 CMakeLists.txt` `md5 lib/CMakeLists.txt` arm64 ghcr.io/cirruslabs/macos-ventura-xcode:14.3 20220511"
    populate_script: make libs build_flags=-j12
  upload_caches:
    - libs

  install_script:
    - brew install python
    - pip3 install --upgrade cloudsmith-cli

  nightly_script:
    - export TZ=utc
    - bash .ci-scripts/arm64-nightly.bash

task:
  only_if: $CIRRUS_CRON == "nightly"

  timeout_in: 120m

  windows_container:
    image: ponylang/ponyc-ci-x86-64-pc-windows-msvc-builder:20220803
    os_version: 2019
    cpu: 8
    memory: 24

  name: "nightly: x86-64-pc-windows-msvc"

  environment:
    CLOUDSMITH_API_KEY: ENCRYPTED[!2cb1e71c189cabf043ac3a9030b3c7708f9c4c983c86d07372ae58ad246a07c54e40810d038d31c3cf3ed8888350caca!]

  libs_cache:
    folder: build/libs
    fingerprint_script:
      - ps: (Get-FileHash -Path make.ps1).Hash + (Get-FileHash -Path CMakeLists.txt).Hash + (Get-FileHash -Path lib\CMakeLists.txt).Hash + "Windows 20220803"
    populate_script:
      - ps: .\make.ps1 -Command libs -Generator "Visual Studio 17 2022"
  upload_caches:
    - libs

  config_script:
    - ps: .\make.ps1 -Command configure -Config Release -Generator "Visual Studio 17 2022" -Prefix "build\install\release" -Version nightly
  build_script:
    - ps: .\make.ps1 -Command build -Config Release -Prefix "build\install\release" -Version nightly
  install_script:
    - ps: .\make.ps1 -Command install -Config Release -Prefix "build\install\release"
  package_script:
    - ps: .\make.ps1 -Command package -Config Release -Prefix "build\install\release" -Version nightly
  upload_script:
    - ps: $version = (Get-Date).ToString("yyyyMMdd"); cloudsmith push raw --version $version --api-key $env:CLOUDSMITH_API_KEY --summary "Pony compiler" --description "https://github.com/ponylang/ponyc" ponylang/nightlies build\ponyc-x86-64-pc-windows-msvc.zip

#
# Release build tasks
#

task:
  only_if: $CIRRUS_TAG =~ '^\d+\.\d+\.\d+$'
  use_compute_credits: true

  timeout_in: 120m

  freebsd_instance:
    image: freebsd-13-1-release-amd64
    cpu: 8
    memory: 24

  name: "release: x86-64-unknown-freebsd-13.1"

  environment:
    CLOUDSMITH_API_KEY: ENCRYPTED[!2cb1e71c189cabf043ac3a9030b3c7708f9c4c983c86d07372ae58ad246a07c54e40810d038d31c3cf3ed8888350caca!]

  install_script:
    - echo "FETCH_RETRY = 6" >> /usr/local/etc/pkg.conf
    - python3 -m ensurepip --upgrade
    - python3 -m pip install cloudsmith-cli
    - pkg install -y bash cmake gmake libunwind git

  libs_cache:
    folder: build/libs
    fingerprint_script: echo "`md5 Makefile` `md5 CMakeLists.txt` `md5 lib/CMakeLists.txt` freebsd-13.1 20210710"
    populate_script: gmake libs build_flags=-j8
  upload_caches:
    - libs

  release_script:
    - bash .ci-scripts/x86-64-unknown-freebsd-13.1-release.bash

task:
  only_if: $CIRRUS_TAG =~ '^\d+\.\d+\.\d+$'
  use_compute_credits: true

  timeout_in: 120m

  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-xcode:14.3

  name: "release: arm64-apple-darwin"

  environment:
    TRIPLE_VENDOR: apple
    TRIPLE_OS: darwin
    CLOUDSMITH_API_KEY: ENCRYPTED[!2cb1e71c189cabf043ac3a9030b3c7708f9c4c983c86d07372ae58ad246a07c54e40810d038d31c3cf3ed8888350caca!]

  libs_cache:
    folder: build/libs
    fingerprint_script: echo "`md5 Makefile` `md5 CMakeLists.txt` `md5 lib/CMakeLists.txt` arm64 ghcr.io/cirruslabs/macos-ventura-xcode:14.3 20220511"
    populate_script: make libs build_flags=-j12
  upload_caches:
    - libs

  install_script:
    - brew install python
    - pip3 install --upgrade cloudsmith-cli

  nightly_script:
    - export TZ=utc
    - bash .ci-scripts/arm64-release.bash

task:
  only_if: $CIRRUS_TAG =~ '^\d+\.\d+\.\d+$'
  use_compute_credits: true

  timeout_in: 120m

  windows_container:
    image: ponylang/ponyc-ci-x86-64-pc-windows-msvc-builder:20220803
    os_version: 2019
    cpu: 8
    memory: 24

  name: "release: x86-64-pc-windows-msvc"

  environment:
    CLOUDSMITH_API_KEY: ENCRYPTED[!2cb1e71c189cabf043ac3a9030b3c7708f9c4c983c86d07372ae58ad246a07c54e40810d038d31c3cf3ed8888350caca!]

  libs_cache:
    folder: build/libs
    fingerprint_script:
      - ps: (Get-FileHash -Path make.ps1).Hash + (Get-FileHash -Path CMakeLists.txt).Hash + (Get-FileHash -Path lib\CMakeLists.txt).Hash + "Windows 20220803"
    populate_script:
      - ps: .\make.ps1 -Command libs -Generator "Visual Studio 17 2022"
  upload_caches:
    - libs

  config_script:
    - ps: .\make.ps1 -Command configure -Config Release -Generator "Visual Studio 17 2022" -Prefix "build\install\release" -Version (Get-Content .\VERSION)
  build_script:
    - ps: .\make.ps1 -Command build -Config Release -Prefix "build\install\release" -Version (Get-Content .\VERSION)
  install_script:
    - ps: .\make.ps1 -Command install -Config Release -Prefix "build\install\release"
  package_script:
    - ps: .\make.ps1 -Command package -Config Release -Prefix "build\install\release" -Version (Get-Content .\VERSION)
  upload_script:
    - ps: $version = (Get-Content .\VERSION); cloudsmith push raw --version $version --api-key $env:CLOUDSMITH_API_KEY --summary "Pony compiler" --description "https://github.com/ponylang/ponyc" ponylang/releases build\ponyc-x86-64-pc-windows-msvc.zip

# Nightly stress tests using string-message-passewr
task:
  only_if: $CIRRUS_CRON == "stress"

  timeout_in: 120m

  arm_container:
    image: ponylang/ponyc-ci-aarch64-unknown-linux-ubuntu22.04-builder:20220720
    cpu: 8
    memory: 4

  matrix:
    - name: "Stress Test: aarch64-unknown-linux-ubuntu22.04 [release]"
      environment:
        IMAGE: ponylang/ponyc-ci-aarch64-unknown-linux-ubuntu22.04-builder:20220720
        TARGET: test-stress-release
    - name: "Stress Test: aarch64-unknown-linux-ubuntu22.04 [debug]"
      environment:
        IMAGE: ponylang/ponyc-ci-aarch64-unknown-linux-ubuntu22.04-builder:20220720
        TARGET: test-stress-debug
      depends_on:
        - "Stress Test: aarch64-unknown-linux-ubuntu22.04 [release]"
    - name: "Stress Test: aarch64-unknown-linux-ubuntu20.04 [cd] [release]"
      environment:
        IMAGE: ponylang/ponyc-ci-aarch64-unknown-linux-ubuntu22.04-builder:20220720
        TARGET: test-stress-with-cd-release
    - name: "Stress Test: aarch64-unknown-linux-ubuntu22.04 [cd] [debug]"
      environment:
        IMAGE: ponylang/ponyc-ci-aarch64-unknown-linux-ubuntu22.04-builder:20220720
        TARGET: test-stress-with-cd-debug
      depends_on:
        - "Stress Test: aarch64-unknown-linux-ubuntu20.04 [cd] [release]"

  libs_cache:
    folder: build/libs
    fingerprint_script: echo "`md5sum Makefile` `md5sum CMakeLists.txt` `md5sum lib/CMakeLists.txt` ${IMAGE}"
    populate_script: make libs build_flags=-j8
  upload_caches:
    - libs

  configure_script:
    - make configure arch=armv8-a config=debug
  build_script:
    - make build config=debug
  stress_test_script:
    - make ${TARGET} config=debug

task:
  only_if: $CIRRUS_CRON == "stress"

  timeout_in: 120m

  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-xcode:14.3

  matrix:
    - name: "Stress Test: arm64 macos monterey [release]"
      environment:
        TARGET: test-stress-release
    - name: "Stress Test: arm64 macos monterey [debug]"
      environment:
        TARGET: test-stress-debug
      depends_on:
        - "Stress Test: arm64 macos monterey [release]"
    - name: "Stress Test: arm64 macos monterey [cd] [release]"
      environment:
        TARGET: test-stress-with-cd-release
    - name: "Stress Test: arm64 macos monterey [cd] [debug]"
      environment:
        TARGET: test-stress-with-cd-debug
      depends_on:
        - "Stress Test: arm64 macos monterey [cd] [release]"

  libs_cache:
    folder: build/libs
    fingerprint_script: echo "`md5 Makefile` `md5 CMakeLists.txt` `md5 lib/CMakeLists.txt` arm64 ghcr.io/cirruslabs/macos-ventura-xcode:14.3 20220511"
    populate_script: make libs build_flags=-j12
  upload_caches:
    - libs

  configure_script:
    - make configure arch=armv8 config=debug
  build_script:
    - make build config=debug
  stress_test_script:
    - make ${TARGET} config=debug usedebugger=lldb

task:
  only_if: $CIRRUS_CRON == "stress"

  timeout_in: 120m

  windows_container:
    image: ponylang/ponyc-ci-x86-64-pc-windows-msvc-builder:20220803
    os_version: 2019
    cpu: 8
    memory: 24

  matrix:
    - name: "Stress Test: x86-64 Windows [release]"
      environment:
        TARGET: stress-test-release
    - name: "Stress Test: x86-64 Windows [debug]"
      environment:
        TARGET: stress-test-debug
      depends_on:
        - "Stress Test: x86-64 Windows [release]"
    - name: "Stress Test: x86-64 Windows [cd] [release]"
      environment:
        TARGET: stress-test-with-cd-release
    - name: "Stress Test: x86-64 Windows [cd] [debug]"
      environment:
        TARGET: stress-test-with-cd-debug
      depends_on:
        - "Stress Test: x86-64 Windows [cd] [release]"

  libs_cache:
    folder: build/libs
    fingerprint_script:
      - ps: (Get-FileHash -Path make.ps1).Hash + (Get-FileHash -Path CMakeLists.txt).Hash + (Get-FileHash -Path lib\CMakeLists.txt).Hash + "Windows 20220803"
    populate_script:
      - ps: .\make.ps1 -Command libs -Generator "Visual Studio 17 2022"
  upload_caches:
    - libs

  configure_script:
    - ps: .\make.ps1 -Command configure -Config Debug -Generator "Visual Studio 17 2022"
  build_script:
    - ps: .\make.ps1 -Command build -Config Debug
  stress_test_script:
    - ps: .\make.ps1 -Command $env:TARGET -Config Debug
