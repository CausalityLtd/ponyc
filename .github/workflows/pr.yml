name: PR

on: pull_request

jobs:
  superlinter:
    name: Lint bash, docker, markdown, and yaml
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint codebase
        uses: docker://github/super-linter:v3.8.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_BASH: true
          VALIDATE_DOCKERFILE: true
          VALIDATE_MD: true
          VALIDATE_YAML: true

  validate-musl-docker-latest-image-builds:
    name: Validate musl Docker image builds
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Docker build
        run: "docker build --pull --file=.dockerfiles/latest/x86-64-unknown-linux-musl/Dockerfile ."

  validate-gnu-docker-latest-image-builds:
    name: Validate GNU Docker image builds
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Docker build
        run: "docker build --pull --file=.dockerfiles/latest/x86-64-unknown-linux-gnu/Dockerfile ."

  validate-windows-docker-latest-image-builds:
    name: Validate Windows Docker image builds
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - name: Docker build
        run: "docker build --pull .dockerfiles/latest/x86-64-pc-windows-msvc"

  validate-musl-docker-release-image-builds:
    name: Validate musl Docker release image builds
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Docker build
        run: "docker build --pull --file=.dockerfiles/release/x86-64-unknown-linux-musl/Dockerfile ."

  validate-gnu-docker-release-image-builds:
    name: Validate GNU Docker release image builds
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Docker build
        run: "docker build --pull --file=.dockerfiles/release/x86-64-unknown-linux-gnu/Dockerfile ."

  validate-windows-docker-release-image-builds:
    name: Validate Windows Docker release image builds
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - name: Docker build
        run: "docker build --pull .dockerfiles/release/x86-64-pc-windows-msvc"

  verify-changelog:
    name: Verify CHANGELOG is valid
    runs-on: ubuntu-latest
    container:
      image: ponylang/changelog-tool:release
    steps:
      - uses: actions/checkout@v3
      - name: Verify CHANGELOG
        run: changelog-tool verify

  x86_64-linux:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - image: ponylang/ponyc-ci-x86-64-unknown-linux-ubuntu22.04-builder:20230806
            name: x86-64 Linux glibc
            debugger: lldb
          - image: ponylang/ponyc-ci-x86-64-unknown-linux-musl-builder:20230808
            name: x86-64 Linux musl
            debugger: gdb

    name: ${{ matrix.name }}
    container:
      image: ${{ matrix.image }}
      options: --user pony --cap-add=SYS_PTRACE --security-opt seccomp=unconfined
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Restore Libs Cache
        id: restore-libs
        uses: actions/cache/restore@v3
        with:
          path: build/libs
          key: libs-${{ matrix.image }}-${{ hashFiles('Makefile', 'CMakeLists.txt', 'libs/CMakeLists.txt') }}
      - name: Build Libs
        if: steps.restore-libs.outputs.cache-hit != 'true'
        run: make libs build_flags=-j8
      - name: Save Libs Cache
        if: steps.restore-libs.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: build/libs
          key: libs-${{ matrix.image }}-${{ hashFiles('Makefile', 'CMakeLists.txt', 'libs/CMakeLists.txt') }}
      - name: Configure Debug Runtime
        run: make configure arch=x86-64 config=debug
      - name: Build Debug Runtime
        run: make build config=debug
      - name: Test with Debug Runtime
        run: make test-ci config=debug usedebugger='${{ matrix.debugger }}'
      - name: Configure Release Runtime
        run: make configure arch=x86-64 config=release
      - name: Build Release Runtime
        run: make build config=release
      - name: Test with Release Runtime
        run: make test-ci config=release usedebugger='${{ matrix.debugger }}'

  x86_64-windows:
    runs-on: windows-2022
    defaults:
      run:
        shell: powershell

    name: x86-64 Windows MSVC
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          wget "https://github.com/msys2/msys2-installer/releases/download/nightly-x86_64/msys2-base-x86_64-latest.sfx.exe" -outfile "C:\msys2.exe"
          C:\msys2.exe -y -oC:\; Remove-Item msys2.exe; function msys() { C:\msys64\usr\bin\bash.exe @('-lc') + @Args }; msys ' '; msys 'pacman --noconfirm -Syuu'; msys 'pacman --noconfirm -Syuu'; msys 'pacman --noconfirm -S --needed base-devel mingw-w64-x86_64-lldb'; msys 'pacman --noconfirm -Scc'
      - name: Restore Libs Cache
        id: restore-libs
        uses: actions/cache/restore@v3
        with:
          path: build/libs
          key: libs-${{ matrix.image }}-${{ hashFiles('make.ps1', 'CMakeLists.txt', 'libs/CMakeLists.txt') }}
      - name: Build Libs
        if: steps.restore-libs.outputs.cache-hit != 'true'
        run: .\make.ps1 -Command libs -Generator "Visual Studio 17 2022"
      - name: Save Libs Cache
        if: steps.restore-libs.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: build/libs
          key: libs-${{ matrix.image }}-${{ hashFiles('make.ps1', 'CMakeLists.txt', 'libs/CMakeLists.txt') }}
      - name: Configure Debug Runtime
        run: .\make.ps1 -Command configure -Config Debug -Generator "Visual Studio 17 2022"
      - name: Build Debug Runtime
        run: .\make.ps1 -Command build -Config Debug
      - name: Test with Debug Runtime
        run: .\make.ps1 -Command test -Config Debug -Uselldb yes
      - name: Configure Release Runtime
        run: .\make.ps1 -Command configure -Config Release
      - name: Build Release Runtime
        run: .\make.ps1 -Command build -Config Release
      - name: Test with Release Runtime
        run: .\make.ps1 -Command test -Config Release -Uselldb yes
