name: Cloudsmith package synchronised

on:
  repository_dispatch:
    types:
      - cloudsmith-package-synchronised

permissions:
  contents: read
  pages: write
  id-token: write
  packages: write

jobs:
  build-latest-gnu-docker-image:
    if: |
      github.event.client_payload.data.repository == 'nightlies' &&
      github.event.client_payload.data.name == 'ponyc-x86-64-unknown-linux-ubuntu22.04.tar.gz'

    name: Build latest GNU Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        run: "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      - name: Build and push
        run: bash .dockerfiles/latest/x86-64-unknown-linux-gnu/build-and-push.bash
      - name: Alert on failure
        if: ${{ failure() }}
        uses: zulip/github-actions-zulip@35d7ad8e98444f894dcfe1d4e17332581d28ebeb
        with:
          api-key: ${{ secrets.ZULIP_SCHEDULED_JOB_FAILURE_API_KEY }}
          email: ${{ secrets.ZULIP_SCHEDULED_JOB_FAILURE_EMAIL }}
          organization-url: 'https://ponylang.zulipchat.com/'
          to: notifications
          type: stream
          topic: ${{ github.repository }} scheduled job failure
          content: ${{ github.server_url}}/${{ github.repository }}/actions/runs/${{ github.run_id }} failed.

  build-latest-musl-docker-image:
    if: |
      github.event.client_payload.data.repository == 'nightlies' &&
      github.event.client_payload.data.name == 'ponyc-x86-64-unknown-linux-musl.tar.gz'

    name: Build latest musl Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        run: "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      - name: Build and push
        run: bash .dockerfiles/latest/x86-64-unknown-linux-musl/build-and-push.bash
      - name: Alert on failure
        if: ${{ failure() }}
        uses: zulip/github-actions-zulip@35d7ad8e98444f894dcfe1d4e17332581d28ebeb
        with:
          api-key: ${{ secrets.ZULIP_SCHEDULED_JOB_FAILURE_API_KEY }}
          email: ${{ secrets.ZULIP_SCHEDULED_JOB_FAILURE_EMAIL }}
          organization-url: 'https://ponylang.zulipchat.com/'
          to: notifications
          type: stream
          topic: ${{ github.repository }} scheduled job failure
          content: ${{ github.server_url}}/${{ github.repository }}/actions/runs/${{ github.run_id }} failed.

  build-latest-windows-docker-image:
    if: |
      github.event.client_payload.data.repository == 'nightlies' &&
      github.event.client_payload.data.name == 'ponyc-x86-64-pc-windows-msvc.zip'

    name: Build latest Windows Docker image
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        run: "docker login -u $env:DOCKER_USERNAME -p $env:DOCKER_PASSWORD"
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      - name: Build and push
        run: .dockerfiles/latest/x86-64-pc-windows-msvc/build-and-push.ps1
      - name: Alert on failure
        if: ${{ failure() }}
        uses: zulip/github-actions-zulip@35d7ad8e98444f894dcfe1d4e17332581d28ebeb
        with:
          api-key: ${{ secrets.ZULIP_SCHEDULED_JOB_FAILURE_API_KEY }}
          email: ${{ secrets.ZULIP_SCHEDULED_JOB_FAILURE_EMAIL }}
          organization-url: 'https://ponylang.zulipchat.com/'
          to: notifications
          type: stream
          topic: ${{ github.repository }} scheduled job failure
          content: ${{ github.server_url}}/${{ github.repository }}/actions/runs/${{ github.run_id }} failed.

  build-release-gnu-docker-image:
    if: |
      github.event.client_payload.data.repository == 'releases' &&
      github.event.client_payload.data.name == 'ponyc-x86-64-unknown-linux-ubuntu22.04.tar.gz'

    name: Build release GNU Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        run: "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      - name: Build and push
        run: bash .dockerfiles/release/x86-64-unknown-linux-gnu/build-and-push.bash
        env:
          VERSION: ${{ github.event.client_payload.data.version }}

  build-release-musl-docker-image:
    if: |
      github.event.client_payload.data.repository == 'releases' &&
      github.event.client_payload.data.name == 'ponyc-x86-64-unknown-linux-musl.tar.gz'

    name: Build release musl Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        run: "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      - name: Build and push
        run: bash .dockerfiles/release/x86-64-unknown-linux-musl/build-and-push.bash
        env:
          VERSION: ${{ github.event.client_payload.data.version }}

  build-release-windows-docker-image:
    if: |
      github.event.client_payload.data.repository == 'releases' &&
      github.event.client_payload.data.name == 'ponyc-x86-64-pc-windows-msvc.zip'

    name: Build release Windows Docker image
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        run: "docker login -u $env:DOCKER_USERNAME -p $env:DOCKER_PASSWORD"
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      - name: Build and push
        run: .dockerfiles/release/x86-64-pc-windows-msvc/build-and-push.ps1
        env:
          VERSION: ${{ github.event.client_payload.data.version }}

  update-playground-image-on-release:
    needs:
      - build-release-musl-docker-image

    name: Update https://playground.ponylang.io/
    runs-on: ubuntu-latest
    steps:
      - name: Run remote command
        uses: ponylang-main/ssh-action@ffff33f8fe0318345a4f00f0e847325954b2a3ed
        with:
          host: ${{ secrets.PLAYGROUND_HOST }}
          username: ${{ secrets.PLAYGROUND_ADMIN_USER }}
          key: ${{ secrets.PLAYGROUND_KEY }}
          script: bash update-playground.bash

  update-stdlib-builder-image-on-release:
    needs:
      - build-release-musl-docker-image

    name: Update stdlib-builder Docker image with newly released ponyc version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        run: bash .ci-dockerfiles/stdlib-builder/build-and-push.bash
        env:
          MATERIAL_INSIDERS_ACCESS: ${{ secrets.MATERIAL_INSIDERS_ACCESS }}

  update-stdlib-builder-image-on-nightly:
    needs:
      - build-latest-musl-docker-image

    name: Update stdlib-builder Docker image with nightly ponyc version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        run: bash .ci-dockerfiles/stdlib-builder/build-and-push.bash
        env:
          MATERIAL_INSIDERS_ACCESS: ${{ secrets.MATERIAL_INSIDERS_ACCESS }}
      - name: Alert on failure
        if: ${{ failure() }}
        uses: zulip/github-actions-zulip@35d7ad8e98444f894dcfe1d4e17332581d28ebeb
        with:
          api-key: ${{ secrets.ZULIP_SCHEDULED_JOB_FAILURE_API_KEY }}
          email: ${{ secrets.ZULIP_SCHEDULED_JOB_FAILURE_EMAIL }}
          organization-url: 'https://ponylang.zulipchat.com/'
          to: notifications
          type: stream
          topic: ${{ github.repository }} scheduled job failure
          content: ${{ github.server_url}}/${{ github.repository }}/actions/runs/${{ github.run_id }} failed.

  build-and-push-stdlib-documentation:
    needs:
      - update-stdlib-builder-image-on-release

    name: Build and Push standard library documentation
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ponylang/ponyc-ci-stdlib-builder:release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: "bash .ci-scripts/build-stdlib-documentation.bash"
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'stdlib-docs/site/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  trigger-release-announcement:
    needs:
      - build-and-push-stdlib-documentation
      - update-playground-image-on-release

    name: Trigger release announcement
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
        with:
          ref: "main"
          token: ${{ secrets.RELEASE_TOKEN }}
      - name: Trigger
        uses: ponylang/release-bot-action@0.6.1
        with:
          entrypoint: trigger-release-announcement
        env:
          GIT_USER_NAME: "Ponylang Main Bot"
          GIT_USER_EMAIL: "ponylang.main@gmail.com"
          CUSTOM_VERSION: ${{ github.event.client_payload.data.version }}

  test-building-stdlib-documentation:
    needs:
      - update-stdlib-builder-image-on-nightly

    name: Test building standard library documentation
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ponylang/ponyc-ci-stdlib-builder:latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: "bash .ci-scripts/build-stdlib-documentation.bash"
      - name: Alert on failure
        if: ${{ failure() }}
        uses: zulip/github-actions-zulip@35d7ad8e98444f894dcfe1d4e17332581d28ebeb
        with:
          api-key: ${{ secrets.ZULIP_SCHEDULED_JOB_FAILURE_API_KEY }}
          email: ${{ secrets.ZULIP_SCHEDULED_JOB_FAILURE_EMAIL }}
          organization-url: 'https://ponylang.zulipchat.com/'
          to: notifications
          type: stream
          topic: ${{ github.repository }} scheduled job failure
          content: ${{ github.server_url}}/${{ github.repository }}/actions/runs/${{ github.run_id }} failed.

  send-musl-nightly-release-event:
    needs: [build-latest-musl-docker-image]

    name: Send musl nightly release event
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo:
          - ponylang/library-documentation-action-v2
          - ponylang/shared-docker
    steps:
      - name: Send
        uses: ponylang-main/repository-dispatch@ce5485de42c9b2622d2ed064be479e8ed65e76f4
        with:
          token: ${{ secrets.PONYLANG_MAIN_API_TOKEN }}
          repository: ${{ matrix.repo }}
          event-type: ponyc-musl-nightly-released
          client-payload: '{"version": "${{ github.event.client_payload.data.version }}"}'
      - name: Alert on failure
        if: ${{ failure() }}
        uses: zulip/github-actions-zulip@35d7ad8e98444f894dcfe1d4e17332581d28ebeb
        with:
          api-key: ${{ secrets.ZULIP_SCHEDULED_JOB_FAILURE_API_KEY }}
          email: ${{ secrets.ZULIP_SCHEDULED_JOB_FAILURE_EMAIL }}
          organization-url: 'https://ponylang.zulipchat.com/'
          to: notifications
          type: stream
          topic: ${{ github.repository }} scheduled job failure
          content: ${{ github.server_url}}/${{ github.repository }}/actions/runs/${{ github.run_id }} failed.

  send-windows-nightly-release-event:
    needs: [build-latest-windows-docker-image]

    name: Send windows nightly release event
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo:
          - ponylang/corral
    steps:
      - name: Send
        uses: ponylang-main/repository-dispatch@ce5485de42c9b2622d2ed064be479e8ed65e76f4
        with:
          token: ${{ secrets.PONYLANG_MAIN_API_TOKEN }}
          repository: ${{ matrix.repo }}
          event-type: ponyc-windows-nightly-released
          client-payload: '{"version": "${{ github.event.client_payload.data.version }}"}'
      - name: Alert on failure
        if: ${{ failure() }}
        uses: zulip/github-actions-zulip@35d7ad8e98444f894dcfe1d4e17332581d28ebeb
        with:
          api-key: ${{ secrets.ZULIP_SCHEDULED_JOB_FAILURE_API_KEY }}
          email: ${{ secrets.ZULIP_SCHEDULED_JOB_FAILURE_EMAIL }}
          organization-url: 'https://ponylang.zulipchat.com/'
          to: notifications
          type: stream
          topic: ${{ github.repository }} scheduled job failure
          content: ${{ github.server_url}}/${{ github.repository }}/actions/runs/${{ github.run_id }} failed.

  send-musl-release-event:
    needs: [build-release-musl-docker-image]

    name: Send release event
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo:
          - ponylang/library-documentation-action
          - ponylang/library-documentation-action-v2
          - ponylang/shared-docker
    steps:
      - name: Send
        uses: ponylang-main/repository-dispatch@ce5485de42c9b2622d2ed064be479e8ed65e76f4
        with:
          token: ${{ secrets.PONYLANG_MAIN_API_TOKEN }}
          repository: ${{ matrix.repo }}
          event-type: ponyc-musl-released
          client-payload: '{"version": "${{ github.event.client_payload.data.version }}"}'
